services:
  migration-service:
    build: ./migrations
    depends_on:
      auth-db:
        condition: service_healthy
      rabbitmq:  
        condition: service_started
    environment:
      DATABASE_URL: "postgres://postgres:postgres@auth-db:5432/auth"
    volumes:
      - ./migrations:/app
  auth-service:
    build: ./auth-service
    ports:
      - "3000:3000"
    depends_on:
      auth-db:
        condition: service_healthy
      rabbitmq:  
        condition: service_started
    environment:
      DATABASE_URL: "postgres://postgres:postgres@auth-db:5432/auth"
    volumes:
      - ./auth-service:/app
  
  order-service:
    build: ./order-service
    ports:
      - "3200:3200"
    depends_on:
      auth-db:
        condition: service_healthy
      rabbitmq:  
        condition: service_started
    environment:
      DATABASE_URL: "postgres://postgres:postgres@auth-db:5432/auth"
    volumes:
      - ./order-service:/app

  auth-db:
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth
    ports:
      - "5432:5432"
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

volumes:
  auth-db-data:

apiVersion: v1
kind: ConfigMap
metadata:
  name: deployment-config
data:
    REDIS_PASSWORD: <REDIS_PASSWORD>
    RABBITMQ_PASSWORD: <RABBITMQ_PASSWORD>
    POSTGRES_PASSWORD: <POSTGRES_PASSWORD>
    VAULT_TOKEN: <VAULT_TOKEN>
---
# Vault deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      nodeSelector:
        role: services  # Ensure this matches your node's hostname
      containers:
      - name: vault
        image: vault:latest
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        ports:
        - containerPort: 8200
        env:
          - name: VAULT_TOKEN
            valueFrom:
              configMapKeyRef:
                name: deployment-config
                key: VAULT_TOKEN
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      nodeSelector:
        role: services  # Ensure this matches your node's hostname
      containers:
      - name: rabbitmq
        image: rabbitmq:latest
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        ports:
        - containerPort: 5672
        env:
          - name: RABBITMQ_DEFAULT_USER
            value: "root"
          - name: RABBITMQ_DEFAULT_PASS
            valueFrom:
              configMapKeyRef:
                name: deployment-config
                key: RABBITMQ_PASSWORD
---
# Redis deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      nodeSelector:
        role: services  # Ensure this matches your node's hostname
      containers:
        - name: redis
          image: redis:latest
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
          ports:
          - containerPort: 6379
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: deployment-config
                  key: REDIS_PASSWORD
          command: ["redis-server", "--requirepass", "$(REDIS_PASSWORD)"]
# ---
# # Auth-service deployment
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: auth
# spec:
#   selector:
#     matchLabels:
#       app: auth
#   template:
#     metadata:
#       labels:
#         app: auth
#     spec:
#       nodeSelector:
#         role: app  # Ensure this matches your node's hostname
#       containers:
#         - name: auth
#           image: registry.digitalocean.com/webrace-docker-registry/auth:latest
#           resources:
#             limits:
#               memory: "512Mi"
#               cpu: "500m"
#             requests:
#               memory: "256Mi"
#               cpu: "250m"
#           ports:
#             - containerPort: 3000
#           env:
#             - name: REDIS_PASSWORD
#               valueFrom:
#                 configMapKeyRef:
#                   name: deployment-config
#                   key: REDIS_PASSWORD
#             - name: RABBITMQ_PASSWORD
#               valueFrom:
#                 configMapKeyRef:
#                   name: deployment-config
#                   key: RABBITMQ_PASSWORD
#             - name: POSTGRES_PASSWORD
#               valueFrom:
#                 configMapKeyRef:
#                   name: deployment-config
#                   key: POSTGRES_PASSWORD
#             - name: VAULT_TOKEN
#               valueFrom:
#                 configMapKeyRef:
#                   name: deployment-config
#                   key: VAULT_TOKEN
# ---
# # Order-service deployment
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: order
# spec:
#   selector:
#     matchLabels:
#       app: order
#   template:
#     metadata:
#       labels:
#         app: order
#     spec:
#       nodeSelector:
#         role: app  # Ensure this matches your node's hostname
#       containers:
#         - name: order
#           image: registry.digitalocean.com/webrace-docker-registry/order:latest
#           resources:
#             limits:
#               memory: "512Mi"
#               cpu: "500m"
#             requests:
#               memory: "256Mi"
#               cpu: "250m"
#           ports:
#             - containerPort: 3200
#           env:
#             - name: REDIS_PASSWORD
#               valueFrom:
#                 configMapKeyRef:
#                   name: deployment-config
#                   key: REDIS_PASSWORD
#             - name: RABBITMQ_PASSWORD
#               valueFrom:
#                 configMapKeyRef:
#                   name: deployment-config
#                   key: RABBITMQ_PASSWORD
#             - name: POSTGRES_PASSWORD
#               valueFrom:
#                 configMapKeyRef:
#                   name: deployment-config
#                   key: POSTGRES_PASSWORD
#             - name: VAULT_TOKEN
#               valueFrom:
#                 configMapKeyRef:
#                   name: deployment-config
#                   key: VAULT_TOKEN
# ---
# # Notification-service deployment
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: notification
# spec:
#   selector:
#     matchLabels:
#       app: notification
#   template:
#     metadata:
#       labels:
#         app: notification
#     spec:
#       nodeSelector:
#         role: app  # Ensure this matches your node's hostname
#       containers:
#         - name: notification
#           image: registry.digitalocean.com/webrace-docker-registry/notification:latest
#           resources:
#             limits:
#               memory: "512Mi"
#               cpu: "500m"
#             requests:
#               memory: "256Mi"
#               cpu: "250m"
#           ports:
#             - containerPort: 3100
#           env:
#             - name: REDIS_PASSWORD
#               valueFrom:
#                 configMapKeyRef:
#                   name: deployment-config
#                   key: REDIS_PASSWORD
#             - name: RABBITMQ_PASSWORD
#               valueFrom:
#                 configMapKeyRef:
#                   name: deployment-config
#                   key: RABBITMQ_PASSWORD
#             - name: POSTGRES_PASSWORD
#               valueFrom:
#                 configMapKeyRef:
#                   name: deployment-config
#                   key: POSTGRES_PASSWORD
#             - name: VAULT_TOKEN
#               valueFrom:
#                 configMapKeyRef:
#                   name: deployment-config
#                   key: VAULT_TOKEN
# ---
# # User-service deployment
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: user
# spec:
#   selector:
#     matchLabels:
#       app: user
#   template:
#     metadata:
#       labels:
#         app: user
#     spec:
#       nodeSelector:
#         role: app  # Ensure this matches your node's hostname
#       containers:
#         - name: user
#           image: registry.digitalocean.com/webrace-docker-registry/user:latest
#           resources:
#             limits:
#               memory: "512Mi"
#               cpu: "500m"
#             requests:
#               memory: "256Mi"
#               cpu: "250m"
#           ports:
#             - containerPort: 3300
#           env:
#             - name: REDIS_PASSWORD
#               valueFrom:
#                 configMapKeyRef:
#                   name: deployment-config
#                   key: REDIS_PASSWORD
#             - name: RABBITMQ_PASSWORD
#               valueFrom:
#                 configMapKeyRef:
#                   name: deployment-config
#                   key: RABBITMQ_PASSWORD
#             - name: POSTGRES_PASSWORD
#               valueFrom:
#                 configMapKeyRef:
#                   name: deployment-config
#                   key: POSTGRES_PASSWORD
#             - name: VAULT_TOKEN
#               valueFrom:
#                 configMapKeyRef:
#                   name: deployment-config
#                   key: VAULT_TOKEN